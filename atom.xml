<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YTCH的小世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-05T17:17:37.787Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YTCH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一点小感慨</title>
    <link href="http://yoursite.com/2019/03/06/%E4%B8%80%E7%82%B9%E5%B0%8F%E6%84%9F%E6%85%A8/"/>
    <id>http://yoursite.com/2019/03/06/一点小感慨/</id>
    <published>2019-03-05T16:36:57.000Z</published>
    <updated>2019-03-05T17:17:37.787Z</updated>
    
    <content type="html"><![CDATA[<p>身边的人大部分是过客，只有少数人会长久的伴随我们左右。<br>小学的时候，我有五年半和一个班级里的五十多号人一起相处，这五年半，我可能与一个或两个同学交好，过一个学期或是更短的一段时间，我就会与其他同学交好。班级里与我交好过的同学，数一数也有好些，大部分人我去过他们的家，拜访过他们的父母、亲人，谁有兄弟姐妹或者父母是做什么的，我心里都有那么些数。可是如今这么多年过去了，这些与我曾交好的人，现在都失去了联络。他们与我一起长大，我与他们共同经历了人生最宝贵的童年时光。童年的记忆良莠不齐，难能可贵的是成为彼此回忆的见证者。<br>我小时候很调皮，街坊邻里的小孩，还有同班同学，都曾是我的玩伴。我记得我和江江、琪琪、莆田包子铺的三个孩子和一些别的孩子，一起去山上偷地瓜，去雅北溪里抓过鱼。<br>江江是很帅的一个男孩，比我大两个年级。那时候的他性格很温柔，也很有耐性，和一般的小学生不一样。他眉心有一颗美人痣。他教我打篮球，教我骑自行车……许多我不会的、不懂的一些孩子们的玩法，都是他教我的。<br>他是我的初恋（单方面的哈）。我四年级时，他六年级时，他父亲让他辍学了。他似乎有两个姐姐，我以前以为，像他那样的家庭，是最重男轻女的，他的家长自然应该让他多读一些书，将他培养成才，可是不然，他父亲就是让他辍学了，而且是小学没毕业就辍学了。我问我母亲，为什么江江的父亲不让江江读书了，母亲说不知道。他辍学以后就在家里的早餐店里帮忙，可是小孩子也帮不了什么，没过多久早餐店里就没了他的踪影。之后我就很少看到他，后来他就去外面打工了，再见到时我已经在育才读初中，他已经是个一头黄色长发的社会青年。<br>琪琪是我家斜对面的快餐店老板的女儿，那家快餐店老板娘是我母亲的闺蜜，我母亲还有个闺蜜，我称她为秋萍阿姨。秋萍阿姨的儿子在浙江理工读大学。琪琪是我们那条街比较好看的女孩子（其实那条街没啥与我们年纪相仿的女孩子），她家里的快餐店是我们家附近的小学学生们午餐的主要场所，我们镇上有很多山里的小孩走远路来上学，他们中午没机会回家，都是在琪琪家里解决的午饭。琪琪家的快餐店挣了很多钱，琪琪的生活品质比我们街上其他小孩要高一些，我感觉她自己也甚是满意她家的经济情况。<br>小时候她经常说些略显傲慢的话，我不太喜欢她，但江江和她也玩得不错，所以我还是需要和她打交道。我转学后第一次见她，是我高中的时候，她身体上出了一些情况，来县城检查身体。那时候我家已经在县城定居，她母亲来见见我母亲。最近的情况是，琪琪结婚了，但她母亲没有邀请我母亲去吃琪琪的喜酒，琪琪结婚的事情还是秋萍阿姨告诉我母亲的。我问母亲，为什么琪琪妈妈不叫你去吃喜酒，你们不是好朋友吗？我母亲说不知道。<br>琪琪不过大我三两岁，没想到这么快就结婚了，我再大几岁也不过大学刚毕业，想想看也许她很早就不读书了吧。不读书的女孩子结婚常常比较早，我室友的同学连孩子都有了，我高中同学的同学，孩子都会走路了。也许我很久没联系的小学同学，也有结婚的，只是我不知道。</p><p>生命里的有些人，不管我喜欢或是不喜欢，他们大概率只会在我的人生中出现那么一小段时间。当我的生命结束时，是谁陪在我身边，是谁在我这一生里陪伴了我最久，是谁是我一生挚爱，是谁当我是他一生挚爱，是谁与我交好……我好奇，但我无从知道，我现在不知道，以后也应该不知道。不论是谁，我只需做到问心无愧——我爱谁时，爱是全心全意；我恨谁时，恨是咬牙切齿；我遗忘时，不管是什么爱恨，我都能摒弃。我想这就是我的问心无愧了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;身边的人大部分是过客，只有少数人会长久的伴随我们左右。&lt;br&gt;小学的时候，我有五年半和一个班级里的五十多号人一起相处，这五年半，我可能与一个或两个同学交好，过一个学期或是更短的一段时间，我就会与其他同学交好。班级里与我交好过的同学，数一数也有好些，大部分人我去过他们的家，拜
      
    
    </summary>
    
    
      <category term="散文" scheme="http://yoursite.com/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>2018总结与2019年展望</title>
    <link href="http://yoursite.com/2018/12/31/newyearplan/"/>
    <id>http://yoursite.com/2018/12/31/newyearplan/</id>
    <published>2018-12-31T13:08:23.000Z</published>
    <updated>2018-12-31T13:11:03.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="过去的18年："><a href="#过去的18年：" class="headerlink" title="过去的18年："></a>过去的18年：</h2><ol><li>阅读了18本书，可以说很少很少了，感觉一个月至少读两本书才是及格= =，所以今年的阅读指数应该是不及格的；</li><li>拿了几个没啥用的破奖，破到不配拥有姓名。有总比没有好= =；</li><li>去了北京、嘉兴、上海这几个城市，算是有出门看看；</li><li>接手一个协会，暂时挂名会长= =；</li><li>暑假居然在家里浪了三个月，又不实习又没打工，真是垃圾；</li><li>又双叒比前一年胖了十斤；</li><li>这是沉迷男星美色和不停的做梦的一年；</li><li>因为没钱错过了一次赚钱的机会；</li><li>认识了一些新朋友；</li><li>想了一下这一年不曾和谁的关系破裂？</li><li>似乎浪费了很多钱，有时候还负债累累（比如花呗）；</li><li>买了一辆公路车；</li><li>完成了几次五十公里骑行；</li></ol><hr><h2 id="又到了一年一度立flag的时间："><a href="#又到了一年一度立flag的时间：" class="headerlink" title="又到了一年一度立flag的时间："></a>又到了一年一度立flag的时间：</h2><ol><li>完成桐乡-下沙一百公里骑行；</li><li>阅读至少24本书；</li><li>去重庆拍照；</li><li>报考北京地区高校的研究生；</li><li>瘦15斤可以吧；</li><li>拿一点有用的奖；</li><li>每天十一点前睡觉！！</li><li>协会步上正轨；</li></ol>]]></content>
    
    <summary type="html">
    
      啊
    
    </summary>
    
    
      <category term="plan" scheme="http://yoursite.com/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>飞雪</title>
    <link href="http://yoursite.com/2018/12/30/%E9%A3%9E%E9%9B%AA/"/>
    <id>http://yoursite.com/2018/12/30/飞雪/</id>
    <published>2018-12-30T15:35:14.000Z</published>
    <updated>2018-12-30T17:42:43.623Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2018年的最后一天，天气预报的大雪如约而至。点点从宿舍出来的时候是傍晚，天空中雪花纷纷扬扬，路面被落在地上融化的雪花打湿，可是还没有积雪。路边的草地与灌木上倒是有些积雪，可是不成气候。看完电影，点点走出影院，路边草丛里的积雪越发厚了。</p><p>点点伸出手去拦雪花，雪花落在黑色夹棉大衣的袖子上，“雪花的白和袖子的黑形成了鲜明的对比，反映出当下……？”，点点心里想。接着她想起高三深冬下的大雪，雪花在风中恣意的样子很是快活，那年伸出手，落在手上的雪花和今天这场大雪落下的似乎可以匹敌。</p><p>点点一边走，一边发着呆。她觉得生活挺无趣的，似乎什么都是有规可循、什么都是不断重复——重复地在上学与回家的路上来来回回，重复地在醒与睡之间来来回回，重复地在听与说间来来回回……有很多重复的地方，点点对生活的乐趣产生了一瞬间的小怀疑。像这样的怀疑每天都要进行，像这样的怀疑占据脑海的时间每次不超过一分钟。每每有这样的小怀疑，她就自然而然、没有缘由地会想到圈圈。</p><p>突然一只有力的大手绕过她的肩膀，一把将小小的她揽入怀中，迅速地说：“过马路的时候不要走神好吗”。圈圈有点不满，点点每天总有那么一会儿皱着眉头不知道在发什么呆。</p><p>点点不说话，默默收回来心思。圈圈说，“雪下的真大啊，大得令人怀念。”，他见点点不回应，又自顾接着说，“我想起以前高中的时候，你也是这样，伸出手去接雪花，也是这样看着雪花发呆。你那时候和现在发呆的内容是一样的吗？”</p><p>差不多吧。点点撇撇嘴，心里想着但是不说出口。圈圈看着她被冻得红扑扑的脸蛋，心里有了数。接着是两个人的沉默。</p><p>又是一个红绿灯路口，两人走到红绿灯下时人行横道的指示灯不凑巧地显示红色。圈圈转过头看着点点。天很冷，点点把脸扎在围巾里，只露出了两只眼睛，一朵雪花越过雨伞落下，挂在了她长长的睫毛上。圈圈把她的围巾扯下，霸道地亲了点点一口。</p><p>点点有点懵逼，但又无可奈何——她已经习惯圈圈这样偶尔的霸道了。</p><p>雪越下越大，人行道上铺的榉木板上积起了一层白白的雪花。</p>]]></content>
    
    <summary type="html">
    
      他一把将她揽入怀中，迅速地说：“过马路的时候不要走神好吗？”
    
    </summary>
    
    
      <category term="小说" scheme="http://yoursite.com/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>过去的许多年</title>
    <link href="http://yoursite.com/2018/12/30/%E8%BF%87%E5%8E%BB%E7%9A%84%E8%AE%B8%E5%A4%9A%E5%B9%B4/"/>
    <id>http://yoursite.com/2018/12/30/过去的许多年/</id>
    <published>2018-12-29T16:01:25.000Z</published>
    <updated>2018-12-31T04:48:47.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1997年"><a href="#1997年" class="headerlink" title="1997年"></a>1997年</h1><p>出生了</p><h1 id="1998-2002年"><a href="#1998-2002年" class="headerlink" title="1998-2002年"></a>1998-2002年</h1><p>像傻瓜一样没有丝毫记忆地长大了</p><h1 id="2003年"><a href="#2003年" class="headerlink" title="2003年"></a>2003年</h1><p>读p>]]></content>
    
    <summary type="html">
    
      总结一下过的模糊的许多年
    
    </summary>
    
    
      <category term="散文" scheme="http://yoursite.com/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>hexo代码阅读分析</title>
    <link href="http://yoursite.com/2018/12/27/%E4%BB%8A%E5%A4%A9%E5%BC%80%E5%A7%8B%E9%98%85%E8%AF%BBhexo%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2018/12/27/今天开始阅读hexo的代码/</id>
    <published>2018-12-26T17:20:18.000Z</published>
    <updated>2018-12-27T16:54:54.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-config-yml"><a href="#第一章-config-yml" class="headerlink" title="第一章 _config.yml"></a>第一章 _config.yml</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>_config.yml是hexo的站点配置文件</p><h2 id="1-1-Site"><a href="#1-1-Site" class="headerlink" title="1.1 Site"></a>1.1 Site</h2><h2 id="1-2-URL"><a href="#1-2-URL" class="headerlink" title="1.2 URL"></a>1.2 URL</h2><h2 id="1-3-Directory"><a href="#1-3-Directory" class="headerlink" title="1.3 Directory"></a>1.3 Directory</h2><h2 id="1-4-Writing"><a href="#1-4-Writing" class="headerlink" title="1.4 Writing"></a>1.4 Writing</h2><h2 id="1-5-index-generator"><a href="#1-5-index-generator" class="headerlink" title="1.5 index_generator"></a>1.5 index_generator</h2><h2 id="1-6-Category-amp-Tag"><a href="#1-6-Category-amp-Tag" class="headerlink" title="1.6 Category &amp; Tag"></a>1.6 Category &amp; Tag</h2><h2 id="1-7-Date-Time-format"><a href="#1-7-Date-Time-format" class="headerlink" title="1.7 Date / Time format"></a>1.7 Date / Time format</h2><h2 id="1-8-Pagination"><a href="#1-8-Pagination" class="headerlink" title="1.8 Pagination"></a>1.8 Pagination</h2><h2 id="1-9-Extensions"><a href="#1-9-Extensions" class="headerlink" title="1.9 Extensions"></a>1.9 Extensions</h2><h2 id="1-10-feed"><a href="#1-10-feed" class="headerlink" title="1.10 feed"></a>1.10 feed</h2><h2 id="1-11-search"><a href="#1-11-search" class="headerlink" title="1.11 search"></a>1.11 search</h2><h2 id="1-12-Deployment"><a href="#1-12-Deployment" class="headerlink" title="1.12 Deployment"></a>1.12 Deployment</h2><h2 id="1-13-githubEmojis"><a href="#1-13-githubEmojis" class="headerlink" title="1.13 githubEmojis"></a>1.13 githubEmojis</h2><h2 id="1-14-live2d"><a href="#1-14-live2d" class="headerlink" title="1.14 live2d"></a>1.14 live2d</h2><h1 id="第二章-db-json"><a href="#第二章-db-json" class="headerlink" title="第二章 db.json"></a>第二章 db.json</h1><h1 id="第三章-debug-json"><a href="#第三章-debug-json" class="headerlink" title="第三章 debug.json"></a>第三章 debug.json</h1><h1 id="第四章-live2d-models"><a href="#第四章-live2d-models" class="headerlink" title="第四章 live2d_models"></a>第四章 live2d_models</h1><h2 id="4-1-live2d-widget-model-koharu"><a href="#4-1-live2d-widget-model-koharu" class="headerlink" title="4.1 live2d-widget-model-koharu"></a>4.1 live2d-widget-model-koharu</h2><h3 id="4-1-1-assets"><a href="#4-1-1-assets" class="headerlink" title="4.1.1 assets"></a>4.1.1 assets</h3><ol><li>koharu.model.json</li><li>koharu.physics.json</li><li>moc<br>(1) koharu.2048<br>texture_00.png<br>(2) koharu.moc</li><li>mtn<br>01.mtn<br>02.mtn<br>03.mtn<br>04.mtn<br>05.mtn<br>06.mtn<br>07.mtn<br>08.mtn<br>09.mtn<br>idle.mtn</li></ol><h3 id="4-1-2-package-lock-json"><a href="#4-1-2-package-lock-json" class="headerlink" title="4.1.2 package-lock.json"></a>4.1.2 package-lock.json</h3><h3 id="4-1-3-package-json"><a href="#4-1-3-package-json" class="headerlink" title="4.1.3 package.json"></a>4.1.3 package.json</h3><h1 id="第五章-node-modules"><a href="#第五章-node-modules" class="headerlink" title="第五章 node_modules"></a>第五章 node_modules</h1><h2 id="5-1-a-sync-waterfall"><a href="#5-1-a-sync-waterfall" class="headerlink" title="5.1 a-sync-waterfall"></a>5.1 a-sync-waterfall</h2><h2 id="5-2-abbrev"><a href="#5-2-abbrev" class="headerlink" title="5.2 abbrev"></a>5.2 abbrev</h2><h2 id="5-3-accepts"><a href="#5-3-accepts" class="headerlink" title="5.3 accepts"></a>5.3 accepts</h2><h2 id="5-4-align-text"><a href="#5-4-align-text" class="headerlink" title="5.4 align-text"></a>5.4 align-text</h2><h2 id="5-5-amdefine"><a href="#5-5-amdefine" class="headerlink" title="5.5 amdefine"></a>5.5 amdefine</h2><h2 id="5-6-ansi-regex"><a href="#5-6-ansi-regex" class="headerlink" title="5.6 ansi-regex"></a>5.6 ansi-regex</h2><h2 id="5-7-ansi-styles"><a href="#5-7-ansi-styles" class="headerlink" title="5.7 ansi-styles"></a>5.7 ansi-styles</h2><h2 id="5-8-anymatch"><a href="#5-8-anymatch" class="headerlink" title="5.8 anymatch"></a>5.8 anymatch</h2><h2 id="5-9-archy"><a href="#5-9-archy" class="headerlink" title="5.9 archy"></a>5.9 archy</h2><h2 id="5-10-argparse"><a href="#5-10-argparse" class="headerlink" title="5.10 argparse"></a>5.10 argparse</h2><h2 id="5-11-arr-diff"><a href="#5-11-arr-diff" class="headerlink" title="5.11 arr-diff"></a>5.11 arr-diff</h2><h2 id="5-12-arr-flatten"><a href="#5-12-arr-flatten" class="headerlink" title="5.12 arr-flatten"></a>5.12 arr-flatten</h2><h2 id="5-13-arr-union"><a href="#5-13-arr-union" class="headerlink" title="5.13 arr-union"></a>5.13 arr-union</h2><h2 id="5-14-array-unique"><a href="#5-14-array-unique" class="headerlink" title="5.14 array-unique"></a>5.14 array-unique</h2><h2 id="5-15-asap"><a href="#5-15-asap" class="headerlink" title="5.15 asap"></a>5.15 asap</h2><h2 id="5-15-assign-symbols"><a href="#5-15-assign-symbols" class="headerlink" title="5.15 assign-symbols"></a>5.15 assign-symbols</h2><h2 id="5-16-async"><a href="#5-16-async" class="headerlink" title="5.16 async"></a>5.16 async</h2><h2 id="5-17-async-each"><a href="#5-17-async-each" class="headerlink" title="5.17 async-each"></a>5.17 async-each</h2><h2 id="5-18-atob"><a href="#5-18-atob" class="headerlink" title="5.18 atob"></a>5.18 atob</h2><h2 id="5-19-babel-code-frame"><a href="#5-19-babel-code-frame" class="headerlink" title="5.19 babel-code-frame"></a>5.19 babel-code-frame</h2><h2 id="5-20-babel-eslint"><a href="#5-20-babel-eslint" class="headerlink" title="5.20 babel-eslint"></a>5.20 babel-eslint</h2><h2 id="5-21-babel-messages"><a href="#5-21-babel-messages" class="headerlink" title="5.21 babel-messages"></a>5.21 babel-messages</h2><h2 id="5-22-babel-runtime"><a href="#5-22-babel-runtime" class="headerlink" title="5.22 babel-runtime"></a>5.22 babel-runtime</h2><h2 id="5-23-babel-traverse"><a href="#5-23-babel-traverse" class="headerlink" title="5.23 babel-traverse"></a>5.23 babel-traverse</h2><h2 id="5-24-babel-types"><a href="#5-24-babel-types" class="headerlink" title="5.24 babel-types"></a>5.24 babel-types</h2><h2 id="5-25-babylon"><a href="#5-25-babylon" class="headerlink" title="5.25 babylon"></a>5.25 babylon</h2><h2 id="5-26-balances-match"><a href="#5-26-balances-match" class="headerlink" title="5.26 balances-match"></a>5.26 balances-match</h2><h2 id="5-27-base"><a href="#5-27-base" class="headerlink" title="5.27 base"></a>5.27 base</h2><h2 id="5-28-basic-auth"><a href="#5-28-basic-auth" class="headerlink" title="5.28 basic-auth"></a>5.28 basic-auth</h2><h2 id="binary-extensions"><a href="#binary-extensions" class="headerlink" title="binary-extensions"></a>binary-extensions</h2><h2 id="bluebird"><a href="#bluebird" class="headerlink" title="bluebird"></a>bluebird</h2><h2 id="boolbase"><a href="#boolbase" class="headerlink" title="boolbase"></a>boolbase</h2><h2 id="brace-expansion"><a href="#brace-expansion" class="headerlink" title="brace-expansion"></a>brace-expansion</h2><h2 id="braces"><a href="#braces" class="headerlink" title="braces"></a>braces</h2><h2 id="browser-fingerprint"><a href="#browser-fingerprint" class="headerlink" title="browser-fingerprint"></a>browser-fingerprint</h2><h2 id="bytes"><a href="#bytes" class="headerlink" title="bytes"></a>bytes</h2><h2 id="cache-base"><a href="#cache-base" class="headerlink" title="cache-base"></a>cache-base</h2><h2 id="camel-case"><a href="#camel-case" class="headerlink" title="camel-case"></a>camel-case</h2><h2 id="camelcase"><a href="#camelcase" class="headerlink" title="camelcase"></a>camelcase</h2><h2 id="center-align"><a href="#center-align" class="headerlink" title="center-align"></a>center-align</h2><h2 id="chalk"><a href="#chalk" class="headerlink" title="chalk"></a>chalk</h2><h2 id="cheerio"><a href="#cheerio" class="headerlink" title="cheerio"></a>cheerio</h2><h2 id="chokidar"><a href="#chokidar" class="headerlink" title="chokidar"></a>chokidar</h2><h2 id="class-utils"><a href="#class-utils" class="headerlink" title="class-utils"></a>class-utils</h2><h2 id="cliui"><a href="#cliui" class="headerlink" title="cliui"></a>cliui</h2><h2 id="code-point-at"><a href="#code-point-at" class="headerlink" title="code-point-at"></a>code-point-at</h2><h2 id="collection-visit"><a href="#collection-visit" class="headerlink" title="collection-visit"></a>collection-visit</h2><h2 id="color-convert"><a href="#color-convert" class="headerlink" title="color-convert"></a>color-convert</h2><h2 id="color-name"><a href="#color-name" class="headerlink" title="color-name"></a>color-name</h2><h2 id="colors"><a href="#colors" class="headerlink" title="colors"></a>colors</h2><h2 id="command-exists"><a href="#command-exists" class="headerlink" title="command-exists"></a>command-exists</h2><h2 id="conponent-emitter"><a href="#conponent-emitter" class="headerlink" title="conponent-emitter"></a>conponent-emitter</h2><h2 id="compression"><a href="#compression" class="headerlink" title="compression"></a>compression</h2><h2 id="concat-map"><a href="#concat-map" class="headerlink" title="concat-map"></a>concat-map</h2><h2 id="connect"><a href="#connect" class="headerlink" title="connect"></a>connect</h2><h2 id="copy-descriptor"><a href="#copy-descriptor" class="headerlink" title="copy-descriptor"></a>copy-descriptor</h2><h2 id="core-js"><a href="#core-js" class="headerlink" title="core-js"></a>core-js</h2><h2 id="cross-spawn"><a href="#cross-spawn" class="headerlink" title="cross-spawn"></a>cross-spawn</h2><h2 id="css-parse"><a href="#css-parse" class="headerlink" title="css-parse"></a>css-parse</h2><h2 id="css-select"><a href="#css-select" class="headerlink" title="css-select"></a>css-select</h2><h2 id="css-what"><a href="#css-what" class="headerlink" title="css-what"></a>css-what</h2><h2 id="cuid"><a href="#cuid" class="headerlink" title="cuid"></a>cuid</h2><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><h2 id="decamelize"><a href="#decamelize" class="headerlink" title="decamelize"></a>decamelize</h2><h2 id="decode-uri-component"><a href="#decode-uri-component" class="headerlink" title="decode-uri-component"></a>decode-uri-component</h2><h2 id="define-property"><a href="#define-property" class="headerlink" title="define-property"></a>define-property</h2><h2 id="depd"><a href="#depd" class="headerlink" title="depd"></a>depd</h2><h2 id="destroy"><a href="#destroy" class="headerlink" title="destroy"></a>destroy</h2><h2 id="dom-serializer"><a href="#dom-serializer" class="headerlink" title="dom-serializer"></a>dom-serializer</h2><h2 id="domelementtype"><a href="#domelementtype" class="headerlink" title="domelementtype"></a>domelementtype</h2><h2 id="domhandler"><a href="#domhandler" class="headerlink" title="domhandler"></a>domhandler</h2><h2 id="domutils"><a href="#domutils" class="headerlink" title="domutils"></a>domutils</h2><h2 id="ee-first"><a href="#ee-first" class="headerlink" title="ee-first"></a>ee-first</h2><h2 id="ejs"><a href="#ejs" class="headerlink" title="ejs"></a>ejs</h2><h2 id="encodeurl"><a href="#encodeurl" class="headerlink" title="encodeurl"></a>encodeurl</h2><h2 id="entities"><a href="#entities" class="headerlink" title="entities"></a>entities</h2><h2 id="escape-html"><a href="#escape-html" class="headerlink" title="escape-html"></a>escape-html</h2><h2 id="escape-string-regexp"><a href="#escape-string-regexp" class="headerlink" title="escape-string-regexp"></a>escape-string-regexp</h2><h2 id="esprima"><a href="#esprima" class="headerlink" title="esprima"></a>esprima</h2><h2 id="esutils"><a href="#esutils" class="headerlink" title="esutils"></a>esutils</h2><h2 id="etag"><a href="#etag" class="headerlink" title="etag"></a>etag</h2><h2 id="expand"><a href="#expand" class="headerlink" title="expand-"></a>expand-</h2><h1 id="第六章-package-lock-json"><a href="#第六章-package-lock-json" class="headerlink" title="第六章 package-lock.json"></a>第六章 package-lock.json</h1><h1 id="第七章-package-json"><a href="#第七章-package-json" class="headerlink" title="第七章 package.json"></a>第七章 package.json</h1><h1 id="第八章-public"><a href="#第八章-public" class="headerlink" title="第八章 public"></a>第八章 public</h1><h2 id="8-1-2018"><a href="#8-1-2018" class="headerlink" title="8.1 2018"></a>8.1 2018</h2><h2 id="8-2-about"><a href="#8-2-about" class="headerlink" title="8.2 about"></a>8.2 about</h2><h2 id="8-3-archives"><a href="#8-3-archives" class="headerlink" title="8.3 archives"></a>8.3 archives</h2><h2 id="8-4-atom-xml"><a href="#8-4-atom-xml" class="headerlink" title="8.4 atom.xml"></a>8.4 atom.xml</h2><h2 id="8-5-CNAME"><a href="#8-5-CNAME" class="headerlink" title="8.5 CNAME"></a>8.5 CNAME</h2><h2 id="8-6-css"><a href="#8-6-css" class="headerlink" title="8.6 css"></a>8.6 css</h2><h2 id="8-7-images"><a href="#8-7-images" class="headerlink" title="8.7 images"></a>8.7 images</h2><h2 id="8-8-index-html"><a href="#8-8-index-html" class="headerlink" title="8.8 index.html"></a>8.8 index.html</h2><h2 id="8-9-js"><a href="#8-9-js" class="headerlink" title="8.9 js"></a>8.9 js</h2><h2 id="8-10-lib"><a href="#8-10-lib" class="headerlink" title="8.10 lib"></a>8.10 lib</h2><h2 id="8-11-live2dw"><a href="#8-11-live2dw" class="headerlink" title="8.11 live2dw"></a>8.11 live2dw</h2><h2 id="8-12-tags"><a href="#8-12-tags" class="headerlink" title="8.12 tags"></a>8.12 tags</h2><h2 id="8-13-uploads"><a href="#8-13-uploads" class="headerlink" title="8.13 uploads"></a>8.13 uploads</h2><h1 id="第九章-scaffolds"><a href="#第九章-scaffolds" class="headerlink" title="第九章 scaffolds"></a>第九章 scaffolds</h1><h2 id="9-1-draft-md"><a href="#9-1-draft-md" class="headerlink" title="9.1 draft,md"></a>9.1 draft,md</h2><h2 id="9-2-page-md"><a href="#9-2-page-md" class="headerlink" title="9.2 page.md"></a>9.2 page.md</h2><h2 id="9-3-post-md"><a href="#9-3-post-md" class="headerlink" title="9.3 post.md"></a>9.3 post.md</h2><h1 id="第十章-source"><a href="#第十章-source" class="headerlink" title="第十章 source"></a>第十章 source</h1><h2 id="10-1-posts"><a href="#10-1-posts" class="headerlink" title="10.1 _posts"></a>10.1 _posts</h2><h2 id="10-2-about"><a href="#10-2-about" class="headerlink" title="10.2 about"></a>10.2 about</h2><h2 id="10-3-CNAME"><a href="#10-3-CNAME" class="headerlink" title="10.3 CNAME"></a>10.3 CNAME</h2><h2 id="10-4-tags"><a href="#10-4-tags" class="headerlink" title="10.4 tags"></a>10.4 tags</h2><h1 id="第十一章-themes"><a href="#第十一章-themes" class="headerlink" title="第十一章 themes"></a>第十一章 themes</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>这是存放我下载的各种主题的文件夹，目前我使用的是next主题，故本文只选择next作为参考</p>]]></content>
    
    <summary type="html">
    
      看了网上很多的hexo的代码优化，但是感觉有的好有的不好，我觉得我有必要自己阅读代码= =（原来太懒了），这篇文章长期更新
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>《计算机是怎样跑起来的》笔记</title>
    <link href="http://yoursite.com/2018/12/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E6%A0%B7%E8%B7%91%E8%B5%B7%E6%9D%A5%E7%9A%84%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/12/26/计算机是怎样跑起来的笔记/</id>
    <published>2018-12-25T17:23:21.000Z</published>
    <updated>2019-01-06T04:18:24.537Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>许多工程师对技术的兴趣淡寡，其原因多在于计算机对他们来说没什么意思。对于计算机，很多工程师知其然不知其所以然，<strong>若每日使用的都是些不知其所以然的技术，就会渐渐不安起来。</strong>还有许多从业者遇到困难以后就转行了。</p><p>作者基于以上理由，希望通过本书让读者了解有关计算机技术的知识范围，“掌握其基础中的基础知识，设定目标；同时又想让那些打算用计算机做点什么，却又难以下手而犹豫不决的人，以及虽然就职于计算机行业，却又因赶不上最新技术而苦恼的人，能够了解计算机的本质。其实计算机非常简单，谁都能掌握。只要掌握了，计算机就会越来越有趣。”</p><h1 id="第1章-计算机的三大原则"><a href="#第1章-计算机的三大原则" class="headerlink" title="第1章 计算机的三大原则"></a>第1章 计算机的三大原则</h1><hr><h2 id="章前小问"><a href="#章前小问" class="headerlink" title="章前小问"></a>章前小问</h2><ol><li>硬件和软件的区别是什么？<br><strong>硬件是看得见摸得着的设备，比如计算机主机、显示器、键盘等。而软件是计算机所执行的程序，即指令和数据。软件本身是看不见的。</strong><br>硬件（Hardware）代表“硬的东西”，而软件（Software）代表“软的东西”。是硬的还是软的取决于眼睛能否看得到，或者实际上能否用手摸到。</li><li>存储字符串“中国”需要几个字节？<br><strong>在GBK字符下，存储“中国”需要4个字节。</strong><br>存储汉字时，字符编码不同，汉字所占用的字节数也就不同。在GBK字符编码下，一个汉字占用2个字节。而在UTF-8字符编码下，一个汉字占用3个字节。</li><li>什么是编码（Code）？<br><strong>通常将为了便于计算机处理而经过数字化处理的信息称作编码。</strong><br>计算机内部会把所有的信息都当成数字来处理，尽管有些信息本来不是数字。用于表示字符的数字是“字符编码”，用于表示颜色的数字是“颜色编码”。</li></ol><hr><h2 id="1-1-计算机的三大根本性基础"><a href="#1-1-计算机的三大根本性基础" class="headerlink" title="1.1 计算机的三大根本性基础"></a>1.1 计算机的三大根本性基础</h2><ol><li>计算机是执行输入、运算、输出的机器</li><li>程序是指令和数据的集合</li><li>计算机的处理方式有时与人们的思维习惯不同</li></ol><h2 id="1-2-输入、运算、输出是硬件的基础"><a href="#1-2-输入、运算、输出是硬件的基础" class="headerlink" title="1.2 输入、运算、输出是硬件的基础"></a>1.2 输入、运算、输出是硬件的基础</h2><ol><li>硬件的基础</li></ol><p>从硬件上看，计算机是执行输入、运算、输出三种操作的机器。计算机的硬件由大量的<strong>IC（Integrated Circuit，集成电路）</strong>组成。每块IC上都有许多引脚。这些引脚有的用于输入，有的用于输出。IC会在其内部对外部输入的信息进行运算，并把运算结果输出到外部。运算这个词意为计算。</p><p>计算机所做的事就是“输入”数据1和2，然后对它们执行加法“运算”，最后“输出”计算结果3。</p><ol start="2"><li>输入、运算、输出三者必须成套出现，缺一不可</li></ol><h2 id="1-3-软件是指令和数据的集合"><a href="#1-3-软件是指令和数据的集合" class="headerlink" title="1.3 软件是指令和数据的集合"></a>1.3 软件是指令和数据的集合</h2><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>软件是指令和数据的集合。所谓指令，即控制计算机进行输入、运算、输出的命令。把向计算机发出的命令一条条列出来，就得到了程序。</p><p>在程序设计中，会为一组指令赋予一个名字，可以称之为“函数”“语句”“方法”“子程序”等。</p><p>程序中的数据分为两类，一类是作为指令执行对象的输入数据；一类是从指令的执行结果得到的输出数据。在编程时程序员会为数据赋予名字，称其为“变量”。</p><h2 id="1-4-对计算机来说什么都是数字"><a href="#1-4-对计算机来说什么都是数字" class="headerlink" title="1.4 对计算机来说什么都是数字"></a>1.4 对计算机来说什么都是数字</h2><p>用数字表示所有的信息。</p><h2 id="1-5-只要理解了三大原则，即使遇到难懂的最新技术，也能轻松应对。"><a href="#1-5-只要理解了三大原则，即使遇到难懂的最新技术，也能轻松应对。" class="headerlink" title="1.5 只要理解了三大原则，即使遇到难懂的最新技术，也能轻松应对。"></a>1.5 只要理解了三大原则，即使遇到难懂的最新技术，也能轻松应对。</h2><p>以.NET技术为例，说明通用技术促进计算机协同工作。<br>为了使互联网上的相互连接的计算机能通过程序协同工作，微软公司采用了SOAP以及XML规范。SOAP是关于调用指令的规范，XML则是定义数据格式的规范。</p><h2 id="1-6-为了贴近人类，计算机在不断地进化"><a href="#1-6-为了贴近人类，计算机在不断地进化" class="headerlink" title="1.6 为了贴近人类，计算机在不断地进化"></a>1.6 为了贴近人类，计算机在不断地进化</h2><p>计算机进化的目的只有一个——与人类更加相近。有乐谱和钢琴就能演奏，人能走的道路或台阶它也能走，这样的机器人无疑才能更加方便地应用于人类社会。</p><h1 id="第2章"><a href="#第2章" class="headerlink" title="第2章"></a>第2章</h1><h2 id="编程方法的进化"><a href="#编程方法的进化" class="headerlink" title="编程方法的进化"></a>编程方法的进化</h2><p>诞生了两种编程方法，<strong>面向组件编程（Component Based Programming）</strong>和<strong>面向对象编程（Object Oriented Programming）</strong>。这两者的进化目标一致，都是使程序员可以在编程中继续沿用人类创造事物时的方法。面向组件编程的方法是通过将组建（程序的零件）组装到一起完成程序；面向对象编程的方法是先如实地对现实世界建模，之后再把模型搬到程序中。</p><ul><li><em>使用符合人类思维习惯的编程方法，可以实现高效率的开发。</em></li></ul><h1 id="第3章-体验一次手工汇编"><a href="#第3章-体验一次手工汇编" class="headerlink" title="第3章 体验一次手工汇编"></a>第3章 体验一次手工汇编</h1><h2 id="小问"><a href="#小问" class="headerlink" title="小问"></a>小问</h2><ol><li><p>什么是机器语言？<br><strong>由二进制数字构成的程序，CPU可以直接对其解释、执行</strong><br>不仅是汇编语言，用C语言，Java，BASIC等编程语言编写的程序，也都需要先转换成机器语言才能被执行。机器语言有时也叫作<strong>“原生代码”（Native Code）</strong>。</p></li><li><p>通常把标识内存或I/O中存储单元的数字称作什么？<br><strong>标志内存或I/O中存储单元的数字叫做“地址”</strong><br>内存中有多个数据存储单元。计算机用从0开始的编号标识每个存储单元，这些编号就是地址（Address）。I/O中的寄存器也可以用地址来标识。哪个寄存器对应哪个地址，取决于CPU和I/O之间的布线方式。</p></li><li><p>CPU中的<strong>标志寄存器（Flags Register）</strong>有什么作用？<br><strong>用于在运算指令执行后，存储运算结果的某些状态</strong><br>Flag的本意是“旗子”，这里引申为“标志”。一旦执行了算术运算、逻辑运算、比较运算等指令后，标志寄存器并不会存放运算结果的值，而是会把运算后的某些状态存储起来，例如运算结果是否是0，是否产生了负数，是否有<strong>溢出（Overflow）</strong></p></li></ol><p><strong>手工汇编（Hand Assenmble）</strong>：使用一种叫做“汇编语言”的编程语言来编写程序，然后再把编好的程序通过手工作业转换成CPU可以直接执行的机器语言。</p><h2 id="3-1-从程序员的角度看硬件"><a href="#3-1-从程序员的角度看硬件" class="headerlink" title="3.1 从程序员的角度看硬件"></a>3.1 从程序员的角度看硬件</h2><ol><li>微型计算机的硬件信息</li></ol><p>此处插图</p><p>「CPU（处理器）信息」</p><ul><li>CPU的种类</li><li>时钟信号的频率</li></ul><p>「内存信息」</p><ul><li>地址空间</li><li>每个地址冲可以存储多少比特的信息</li></ul><p>「I/O信息」</p><ul><li>I/O的种类</li><li>地址空间</li><li>连接着何种周边设备</li></ul><p>可以使用哪种机器语言取决于CPU（也称作处理器）的种类。所谓机器语言就是只用0和1两个二进制书写的编程语言。即便是相同的机器语言，例如01010011，只要CPU的种类不同，对它的解释也就不同。</p><p>时钟信号的频率，就是由时钟发生器发送给CPU的电信号的频率。表示时钟信号频率的单位是MHz（兆赫兹=100万回/s）。微型计算机使用的是2.5兆赫兹的时钟信号。时钟信号是在0和1两个数字之间反复变换的电信号，就像滴答滴答左右摆动的钟摆一样。通常把发出一次滴答的时间称作一个时钟周期。</p><p>在机器语言当中，指令执行时所需要的周期数取决于指令的类型。程序员不但可以通过累加时钟周期数估算程序的执行时间，还可以仅在特定的时间执行点亮LED（发光二极管）等操作。</p><p>每个地址都标志着一个内存中的数据存储单元，而这些地址所构成的范围就是内存的地址空间。在我们微型计算机中，地址空间为0～255，每一个地址中可以存储8比特（1字节）的指令或数据。</p><p>连接着的I/O的种类，就是指连接着微型计算机和周边设备的I/O的种类。在微型计算机中，只安装了一个I/O，即上面带有4个8比特寄存器的Z80 PIO。只要用CPU控制I/O的寄存器，就可以设定I/O的功能，与周边设备进行数据的输入输出。</p><p>所谓I/O的地址空间，是指用于指定I/O寄存器的地址范围。</p><p>在内存中，每个地址的功能都一样，既可用于存储指令又可用于存储数据。而I/O则不同，地址编号不同（即寄存器的类型不同），功能也就不同。</p><h2 id="3-2-机器语言和汇编语言"><a href="#3-2-机器语言和汇编语言" class="headerlink" title="3.2 机器语言和汇编语言"></a>3.2 机器语言和汇编语言</h2><p>在机器语言程序中，到处都是有特定含义的指令或数据的0和1的组合。可是对人来说，如果只看0和1的话，恐怕很难判断各个组合都代表什么。</p><p>于是有人发明了一种编程方法，根据表示指令功能的英语单词起一个相似的昵称，并将这个昵称赋给0和1的组合。这种类似英语单词的昵称就叫做“助记符”，使用助记符的编程语言就叫做“汇编语言”。</p><p>汇编语言的语法非常简单，以至于语法只有一个，即把“标签”“操作码（指令）”和“操作数（指令的对象）”并排写在一行上，仅此而已。</p><p>【这里要有表格】</p><p>标签的作用是为该行为代码对应的内存地址起一个名字。用汇编语言编程时可以在任何需要的地方“贴上”名称任意的标签。</p><p>操作码就是表示“做什么”的指令。因为用助记符表示的指令是英语单词的缩写，比如LD是Load（加载）的缩写，所以多多少少能猜出其中的含义。汇编语言中提出来多少种助记符，CPU就有多少种功能。</p><p>操作数表示的是指令执行的对象。CPU的寄存器，内存地址，I/O地址或者直接给出的数字都可以作为操作数。如果是某条指令需要多个操作数，那么它们之间就要用逗号分割。操作数的个数取决于指令的种类。也有不需要操作数的指令，比如用于停止CPU运转的HALF指令。</p><p>汇编语言的语法和英语祈使句的语法很像。</p><p>构成机器语言的是二进制数，而在汇编语言中，则使用十进制数和十六进制数纪录数据。</p><p>【此处有表格】</p><h2 id="3-3-Z80-CPU的寄存器结构"><a href="#3-3-Z80-CPU的寄存器结构" class="headerlink" title="3.3 Z80 CPU的寄存器结构"></a>3.3 Z80 CPU的寄存器结构</h2><p><em>复习<br>计算机的硬件有三个基本要素，CPU、内存和I/O。CPU负责解释、执行程序，从内存或I/O输入数据，在内部进行运算，再把运算结果输出到内存中或I/O。内存中存放着程序，程序是指令和数据的集合。I/O中临时存放着用于与周边设备进行输入输出的数据。</em></p><p><strong>CPU的寄存器</strong><br>CPU中用来存储数据的地方，同时具备对数据进行运算的能力。</p><p>CPU带有什么样的寄存器取决于CPU的种类。Z80 CPU所带有的寄存器如图所示：<br>【此处有表格】</p><p>寄存器的用途取决于它的类型。有的指令只能将特定的寄存器指定为操作数。</p><blockquote><p>A寄存器也叫作“累加器”，是运算的核心。<br>F寄存器又称“标志寄存器”，用于存储运算结果的状态。<br>PC寄存器又称“程序指针”，存储着指向CPU接下来要执行的指令的地址。PC寄存器的值会随着滴答滴答的时钟信号自动更新，可以说程序就是依靠不断变化的PC寄存器的值运行起来的。<br>SP寄存器也叫作“栈顶置针”，用于在内存中创建出一块成为“栈”的临时数据存储区域。</p></blockquote><h2 id="3-4-追踪程序的运行过程"><a href="#3-4-追踪程序的运行过程" class="headerlink" title="3.4 追踪程序的运行过程"></a>3.4 追踪程序的运行过程</h2><p>用汇编语言编写的程序是不能直接运行的，必须先转换成机器语言，机器语言是唯一一种CPU能直接理解的编程语言。</p><p>1条汇编语言的指令所对应的机器语言由多个字节构成。而且，同样是汇编语言中的一条指令，有的指令对应着一个字节的机器语言，有的指令则对应着多个字节的机器语言。转换而成的机器语言有多少个字节取决于汇编语言的指令的种类以及操作数的个数。</p><h2 id="3-5-尝试手工汇编"><a href="#3-5-尝试手工汇编" class="headerlink" title="3.5 尝试手工汇编"></a>3.5 尝试手工汇编</h2><p>在CPU的资料中，明确写有所有可以使用的助记符，以及助记符转换成机器语言后的数值。只要查看这些资料就可以把用汇编语言编写的程序手工转换成机器语言的程序，这样的工作成为“手工汇编”。进行手工汇编时，要一行一行地把用汇编语言编写的程序转换成机器语言。</p><p>【此处表格】</p><p>第一行的“LD A，207”匹配“LD A，num”这个模式。然后将十进制数的207转换成8比特的二进制数，用这个二进制数替换num，之后，得到00111110 11001111。</p><p>第2条指令“OUT（2），A”匹配“OUT（num），A”这个模式，所以可以先转换成“11010011 num”，然后把num的部分替换成00000010，即用8比特的二进制数表示的十进制数2，最终就得到了机器语言“11010011 00000010”。因为内存中已存储32字节的机器语言，所以这条机器语言要从0000 0010号地址开始记录。</p><p>以此类推。</p><p>最后一句的JP LOOP匹配模式“JP num”，所以可以先转化成“1100 0011 num”。请注意这里要用16比特的二进制数替代作为内存地址的num。在微型计算机中是以8比特为单位制定内存地址的，但在280CPU中用于设定内存地址的引脚却有16个，所以在机器语言中也要用16比特的二进制数设定内存地址。JP指令跳转的目的地为0001 0000，即“LOOP:”标签所表示的语句“LDA，O”对应的内存地址，把这个地址扩充为16比特就是“00000000 00010000”。要扩充到16位，只需要把高八位全部设为0就可以了。</p><p><strong>在将一个2字节的数据存储到内存时，存储顺序是低八位在前，高八位在后（也就是逆序存储）。这样的存储顺序叫作“小端序”（Little Endian），与此相反，将数据由高位到低位顺序地存储到内存的存储顺序叫作“大端序”（Big Endian）。根据CPU种类的不同，有的CPU使用大端序，有的CPU使用小端序。Z80 CPU使用的是小端序，因此JP LOOP对应的机器语言为“11000011 00010000 00000000”</strong></p><h2 id="3-6尝试估算程序的执行时间"><a href="#3-6尝试估算程序的执行时间" class="headerlink" title="3.6尝试估算程序的执行时间"></a>3.6尝试估算程序的执行时间</h2><p>先计算时钟周期数之和，以先前为例，时钟周期数为72个；LOOP标签之后需32个时钟周期。因为微型计算机采用的是2.5MHz的晶振，也就是1秒可以产生250万个时钟周期，所以每个时钟周期是1秒➗250万=0.0000004=0.4微秒，72分就是28.8微秒；32个时钟周期就是12.8微秒。这段程序是用LED的亮或灭来表示拨开关的开关状态，所以LOOP标签之后所执行的操作“输入、输出、跳转”每一秒可以反复执行1秒➗12.8微秒/每次=78125次之多。</p><h1 id="第4章-程序像河水一样流动着"><a href="#第4章-程序像河水一样流动着" class="headerlink" title="第4章 程序像河水一样流动着"></a>第4章 程序像河水一样流动着</h1><h2 id="开卷有益"><a href="#开卷有益" class="headerlink" title="开卷有益"></a>开卷有益</h2><ol><li><p>Flow Chart的中文意思是什么？<br><strong>流程图</strong><br>流程图（Flow Chart）是指用图的形式表示程序的流程</p></li><li><p>请说出自然界中河流的三种流动方式<br><strong>向着一个方向流淌；流着流着产生支流；卷成漩涡</strong><br>程序中分别对应着顺序执行，条件分支和循环。</p></li><li><p>事件驱动是什么？<br><strong>用户的操作等产生事件后，由事件决定程序的流程</strong><br>Windows应用程序的运行就是由事件驱动的。例如，选择“打开文件”菜单项就能打开一个窗口，在里面可以指定要打开的文件的名称和存储位置。之所以能够这样是因为一旦触发了“选中了菜单项”这个事件，程序的流程就想赢地流转到了处理打开窗口的那部分。</p></li></ol><h2 id="4-1-程序的流程分为三种"><a href="#4-1-程序的流程分为三种" class="headerlink" title="4.1 程序的流程分为三种"></a>4.1 程序的流程分为三种</h2><p>计算机的硬件系统由CPU、I/O和内存三部分构成。内存中存储着程序，也就是指令和数据。CPU配合着由时钟发生器发出的滴答滴答的时钟信号，从内存中读出指令，然后再对其依次进行解释和执行。</p><p>CPU中有各种各样的各司其职的寄存器。其中有一个被称为PC（Program Counter，程序计数器）的寄存器，负责存储内存地址，该地址指向下一条即将执行的指令。每解释执行完一条指令，PC寄存器的值会自动被更新到下一条指令的地址。</p><p>PC寄存器的值在大多数情况下只会增加。下面假设PC寄存器正指向内存中一个从10号地址开始的3字节指令。CPU解释执行完这条指令后，PC寄存器中的值就编程10+3=13了。也就是说，程序基本上是从内存中的低地址（编号较小的地址）开始，向着高地址（编号较大的地址）流动下去的，我们把这种程序的这种流动称为“顺序流动”。</p><p>程序的流程总共有三种。除了顺序执行意外，还有“条件分支”和“循环”。</p><p>顺序执行是按照指令记录在内存中的先后顺序依次执行的一种流程。而循环则是在程序的特定范围内反复执行若干次的一种流程。条件分支是根据若干个条件的成立与否，在程序的流程中产生若干个分支的一种流程。无论规模多么大多么复杂的程序，都是通过以上三种流程组合起来实现的。</p><p>还有一种“无条件分支”，算是特殊的“条件分支”。</p><h2 id="4-2-用流程图表示程序的流程"><a href="#4-2-用流程图表示程序的流程" class="headerlink" title="4.2 用流程图表示程序的流程"></a>4.2 用流程图表示程序的流程</h2><p>这里插图</p><p>流程图的方便在于它不依赖于特定的编程语言。</p><p>最低限度所需的流程图符号。</p><p>这里表格</p><p><strong>用流程图表示的三种流程</strong></p><p>此处插图</p><h2 id="4-3-表示循环程序块的“帽子”和“短裤”"><a href="#4-3-表示循环程序块的“帽子”和“短裤”" class="headerlink" title="4.3 表示循环程序块的“帽子”和“短裤”"></a>4.3 表示循环程序块的“帽子”和“短裤”</h2><p>其实就是下面这个图</p><p>图</p><p>在计算机硬件上的操作中，循环是通过党满足条件时就返回到之前处理过的步骤来实现的。一旦使用了机器语言或汇编语言所提供的跳转指令，就可以将PC寄存器的值设置为任意的内存地址。如果将它的值设为之前执行过的步骤所对应的内存地址，那么就构成了循环。</p><p>用机器语言活着汇编语言表示循环是，都是先进行某种比较，再根据比较结果，跳转到之前的地址。</p><p>之后就是高级编程语言中的实践，不再重复。</p><h2 id="4-4-结构化程序设计"><a href="#4-4-结构化程序设计" class="headerlink" title="4.4 结构化程序设计"></a>4.4 结构化程序设计</h2><p>结构化程序设计是由学者戴克斯特拉提倡的一种变成风格。其目的是为了把程序编写的具备结构性，仅使用顺序执行、条件分支和循环表示程序的流程即可，而不再使用跳转指令。</p><p>跳转指令的缺陷在于容易使程序陷入到流程错综复杂的状态。</p><p>在旧版本的Visual Basic中，一旦发生了错误，程序的流程就会跳转到执行错误处理的地方。用程序块来表示这种错误处理方式的极致，就是结构化异常处理。</p><h2 id="4-5-画流程图来思考算法"><a href="#4-5-画流程图来思考算法" class="headerlink" title="4.5 画流程图来思考算法"></a>4.5 画流程图来思考算法</h2><p><strong>算法（Algorithm）</strong>即解决问题的步骤。想让计算机解决问题，就需要把问题的解法转换成程序的流程。</p><p>思考算法时的要点是要分两步走，先从整体上考虑程序的粗略流程，再考虑程序各个部分细节的流程。</p><p>初始化——循环处理——收尾处理</p><h2 id="4-6-特殊的程序流程——中断处理"><a href="#4-6-特殊的程序流程——中断处理" class="headerlink" title="4.6 特殊的程序流程——中断处理"></a>4.6 特殊的程序流程——中断处理</h2><p>中断处理是指计算机使程序的流程突然跳转到程序中的特定地方，这样的地方被称为中断处理例程（Routine）或是中断处理程序（Handler），而这种跳转是通过CPU所具备的硬件功能实现的。</p><p>由于外部的原因使正常的流程中断，中断后再返回到之前流程的过程就是中断处理流程。</p><p>中断处理以从硬件发出的请求为条件，使程序的流程产生分支，因此可以说它是一种特殊的条件分支。</p><p>计算机具有硬件处理中断的能力；中断一词的英文是Interrupt。</p><h2 id="4-7-特殊的程序流程——事件驱动"><a href="#4-7-特殊的程序流程——事件驱动" class="headerlink" title="4.7 特殊的程序流程——事件驱动"></a>4.7 特殊的程序流程——事件驱动</h2><p>程序员们经常用事件驱动的方式编写那些工作再GUI（Graphical User Interface，图形用户界面）环境中的应用程序，例如Windows操作系统中的应用程序。</p><p>通常把用户在应用程序中点击鼠标或者敲击键盘这样的操作称作“事件”（Event）。负责检测事件的是Windows。Windows通过调用应用程序的WndProc（）函数通知应用程序事件的发生。而应用程序则根据事件的类型做处相应的处理。这种机制就是事件驱动。可以说事件驱动也是一种特殊的条件分支，它以从windows送来的通知为条件，根据通知的内容决定程序下一步的流程。</p><p>要实现事件驱动，就必须把应用程序中的WndProc（）函数（称为窗口过程，Window Procedure）的起始内存地址告诉Windows。这一步将在应用程序WinMain（）中作为初始化处理被执行。</p><p>状态转化图是一种便于表示事件驱动的图。状态转化图中有多个状态，反映了由于某种原因从某个状态转化到另一个状态的流程。工作在GUI环境中的程序，其显示在画面上的窗口就有若干个状态。以计算器应用程序为例，如下图：</p><p>【图】</p><p>状态转化表比较方便，用excel就能画。</p><h1 id="第五章-与算法成为好朋友的七个要点"><a href="#第五章-与算法成为好朋友的七个要点" class="headerlink" title="第五章 与算法成为好朋友的七个要点"></a>第五章 与算法成为好朋友的七个要点</h1><h2 id="章前"><a href="#章前" class="headerlink" title="章前"></a>章前</h2><ol><li><p>Algorithm翻译成中文是什么？<br><strong>Algorithm翻译成中文是“算法”。</strong></p></li><li><p>辗转相除法是用于计算什么的算法？<br><strong>是用于计算最大公约数的算法。</strong></p></li><li><p>程序中的“哨兵”指的是什么？<br><strong>“哨兵”指的是一种含有特殊值的数据，可用于标识数据的结尾等。</strong> </p></li></ol><hr>]]></content>
    
    <summary type="html">
    
      关于这本书的一些笔记= =其实就是我根据个人理解的改编浓缩，我想这样做有助于我记忆书本内容（本文根据我的纸质笔记进一步改编）
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="矢泽久雄" scheme="http://yoursite.com/tags/%E7%9F%A2%E6%B3%BD%E4%B9%85%E9%9B%84/"/>
    
  </entry>
  
  <entry>
    <title>关于Hexo中tags标签无法正常调用的问题</title>
    <link href="http://yoursite.com/2018/12/25/%E5%85%B3%E4%BA%8Etags%E6%A0%87%E7%AD%BE%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E8%B0%83%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/12/25/关于tags标签无法正常调用的问题/</id>
    <published>2018-12-25T00:48:20.000Z</published>
    <updated>2018-12-25T01:08:42.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>在hexo配置文件中打开tags标签，又在终端生成了tags页面，文章中也使用了tags，但是配置后单击tags，不能查看到自己已经添加的tags，在网上查了多种方法均和我的操作一样。最后发现问题所在。</p><p>建立在看这篇博客的同学已经生成tags页面并且启用的基础上，具体解决步骤如下：</p><h2 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h2><p>编辑文件夹tags子目录的index文件，<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"tag"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p><strong>其中的要点在于！<br>layout参数名称应该使用你的主题文件夹下layout目录中的第一级的布局文件，比如我的名叫tag.swig，那我这里就用的”tag”，如果你的叫tags，那你就应该用tags（也许你的叫a）</strong></p><h2 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h2><p>检查hexo站点配置文件的Directory选项<br>看看名称是否匹配<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Directory</span></span><br><span class="line"><span class="symbol">tag_dir:</span> tags</span><br></pre></td></tr></table></figure></p><p>这样应该解决了</p>]]></content>
    
    <summary type="html">
    
      一开始我的tags有自己的想法
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>这博客挺好的不是吗</title>
    <link href="http://yoursite.com/2018/12/24/%E8%80%81%E5%B8%88%E8%AF%B4%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E8%AE%BE%E8%AE%A1%E4%B8%8D%E5%A4%9F%E7%AC%A6%E5%90%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82/"/>
    <id>http://yoursite.com/2018/12/24/老师说我的博客设计不够符合课程要求/</id>
    <published>2018-12-24T06:43:56.000Z</published>
    <updated>2018-12-24T06:54:51.441Z</updated>
    
    <content type="html"><![CDATA[<p>今天上荆丽倩老师的课，我直接给我的博客（就是你现在正在访问的这个）截了个图就上交了= =，老师说这个不太好，不能体现我上课的收获。我觉得还好吧，其实我自己私下做的设计，和这个博客的样子是一毛一样的（有些东西位置不太一样）。只是配色偏蓝色调，总体布局和这个差不多。</p><p>个人博客唉，程序员的个人博客唉，想怎么丰富呀？肯定是像代码一样简单纯粹一目了然是最好的了。如果太花里胡哨，不能让人立刻知道我想说的话，那这个博客作为程序员的博客就有那么一点点不合格了。</p><p>这个款式在github上最受欢迎是有原因的，我们大家都喜欢这样的极简的款式。</p>]]></content>
    
    <summary type="html">
    
      老师说的不对
    
    </summary>
    
    
      <category term="散文" scheme="http://yoursite.com/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>同学的爷爷</title>
    <link href="http://yoursite.com/2018/12/21/%E5%90%8C%E5%AD%A6%E7%9A%84%E7%88%B7%E7%88%B7/"/>
    <id>http://yoursite.com/2018/12/21/同学的爷爷/</id>
    <published>2018-12-21T01:07:11.000Z</published>
    <updated>2018-12-21T01:24:46.176Z</updated>
    
    <content type="html"><![CDATA[<p>小学的时候我有那么几个关系很不错的同学，其中当属一个欧同学与我交情比较好。我就叫她欧君吧。</p><p>欧君家在长街尾拐角的深处，比法院还要更深一些，我家在长街的中段、小学门口，我住得离她不远，常去找她玩耍。</p><p>当时她家长辈有叔叔一个——她父亲的双胞胎兄弟，爷爷奶奶身体健康。有一回去她家的时候就看到她爷爷在写字，我一直是个对各种事情都保持着比较新奇心情的人，加上在我们那个小镇，我能接触到的有文化的人屈指可数，所以我很敬仰她爷爷。</p><p>欧爷爷看我有兴趣，饶有兴致地拿出他许多东西给我看，有他八十年代花了一块两块买来的一本保存较好的新华字典，还有若干他手写的小楷文章。爷爷写的小楷工整有力，完全看不出是个花发老人的作品。当时就想，如果我能写一手像欧爷爷那么好的小楷就好了。</p><p>实际上我字写得极丑，我没有晒过我小学时候的作业本，如果有谁看到过，都会知道我小学的字极丑，当然了，现在也不太好看。俗话说横平竖直，我的横不平，还起码脱离水平线30度，后来我转学到育才，育才的陈伟娟老师花了好些心思才让我改掉这偏了三四十度的横，这是后话。字写得脱出常态不一定是坏事，但小学生还是慢慢写、从字迹工整开始比较好。</p><p>有一次我在欧君家写作业，欧爷爷刚好看了看我的字，我看我那字如此丑陋，顿时有些羞愧，但欧爷爷人比较好，撇开我的字形，鼓励我说我的字有力，是欧君没有的（欧君的字秀气工整），我心里感激得很。</p><p>我的字曾经是很有力，有的是一股蛮力，写完一张纸，一摸纸背，都是凸起的各种纹路，这是有蛮力的字。现在蛮力没有了，遒劲之力也没有练习出来，希望以后努力吧。</p>]]></content>
    
    <summary type="html">
    
      这几天写书法想起的一些小事
    
    </summary>
    
    
      <category term="散文" scheme="http://yoursite.com/tags/%E6%95%A3%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>我好绝望哦</title>
    <link href="http://yoursite.com/2018/12/18/%E6%88%91%E5%A5%BD%E7%BB%9D%E6%9C%9B%E5%93%A6/"/>
    <id>http://yoursite.com/2018/12/18/我好绝望哦/</id>
    <published>2018-12-18T02:27:30.000Z</published>
    <updated>2018-12-19T05:26:05.005Z</updated>
    
    <summary type="html">
    
      给我的博客增加一个总访问量、给文章增加一个阅读量咋辣么难咧
    
    </summary>
    
    
      <category term="我是呆瓜" scheme="http://yoursite.com/tags/%E6%88%91%E6%98%AF%E5%91%86%E7%93%9C/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署后gitpage自定义域名失效问题</title>
    <link href="http://yoursite.com/2018/12/14/second/"/>
    <id>http://yoursite.com/2018/12/14/second/</id>
    <published>2018-12-14T13:11:53.000Z</published>
    <updated>2018-12-14T14:56:23.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>根据网上的各种资料，我将我的阿里云域名解析好，又在github上的setting里修改custom domain，保存之后就能直接使用自己的域名访问博客了。<br><img src="domain.png" alt=""><br><strong>但是！</strong>我在多次重建部署站点以后发现，github上绑定的域名有时候会消失，还需要我手动再次保存，为了解决这个问题，我着手开始百度，终于发现了解决问题的关键。这个问题吧，解决起来挺简单的，只在在站点根目录下的source文件夹内创建一个名为CNAME的文本（不用包含后缀，我用sublime创建的），如图所示<br><img src="cname.png" alt=""><br>再在这个文本中输入自己的域名即可，如图。github仓库根目录也应该有这样一个文件。<br><img src="ytch.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      本文是我在部署hexo的实践过程中遇到的问题之一
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo生成的第一篇文章</title>
    <link href="http://yoursite.com/2018/12/12/my-first-article/"/>
    <id>http://yoursite.com/2018/12/12/my-first-article/</id>
    <published>2018-12-12T08:11:53.000Z</published>
    <updated>2018-12-14T08:41:53.729Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始写的ytch：这里似乎是可以填入文章内容的，好像第一篇文章我也没有什么好说的，那么就用这段话将就着看看吧。（其实是markdown语法测试）</p><p>写了一会的ytch：懒得写了，= =参考这个文档吧<strong><a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank" rel="noopener">markdown语法</a></strong></p><h1 id="标题测试1"><a href="#标题测试1" class="headerlink" title="标题测试1"></a>标题测试1</h1><h2 id="标题测试2"><a href="#标题测试2" class="headerlink" title="标题测试2"></a>标题测试2</h2><h3 id="标题测试3"><a href="#标题测试3" class="headerlink" title="标题测试3"></a>标题测试3</h3><h4 id="标题测试4"><a href="#标题测试4" class="headerlink" title="标题测试4"></a>标题测试4</h4><h5 id="标题测试5"><a href="#标题测试5" class="headerlink" title="标题测试5"></a>标题测试5</h5><h6 id="标题测试6"><a href="#标题测试6" class="headerlink" title="标题测试6"></a>标题测试6</h6><h1 id="简单的一些文字样式"><a href="#简单的一些文字样式" class="headerlink" title="简单的一些文字样式"></a>简单的一些文字样式</h1><p>没啥好说的，就是一些样式操作。<br><em>斜体</em><br><strong>粗体</strong><br><del>划掉</del><br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*斜体*</span></span><br><span class="line">*<span class="strong">*粗体*</span><span class="strong">*</span></span><br><span class="line"><span class="strong">~~划掉~~</span></span><br><span class="line"><span class="strong">啊谁告诉我为什么我写三行的话行数序号3是歪的，加上第四行就都整齐了？</span></span><br></pre></td></tr></table></figure></p><h1 id="列表形式"><a href="#列表形式" class="headerlink" title="列表形式"></a>列表形式</h1><p>简单的列表操作。</p><ol><li>有序列表</li><li>有序列表<br>..* 无序列表</li></ol><h1 id="链接嵌入"><a href="#链接嵌入" class="headerlink" title="链接嵌入"></a>链接嵌入</h1><p>有时候我们需要一些链接，链接的形式有很多，根据markdown的文档，我复制粘贴如下的链接款式：<br><a href="https://www.google.com" target="_blank" rel="noopener">I’m an inline-style link</a></p><p><a href="https://www.google.com" title="Google&#39;s Homepage" target="_blank" rel="noopener">I’m an inline-style link with title</a></p><p><a href="https://www.mozilla.org" target="_blank" rel="noopener">I’m a reference-style link</a></p><p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p><p><a href="http://slashdot.org" target="_blank" rel="noopener">You can use numbers for reference-style link definitions</a></p><p>Or leave it empty and use the <a href="http://www.reddit.com" target="_blank" rel="noopener">link text itself</a>.</p><p>URLs and URLs in angle brackets will automatically get turned into links.<br><a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> or <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> and sometimes<br>example.com (but not on Github, for example).</p><p>Some text to show that the reference links can follow later.</p>]]></content>
    
    <summary type="html">
    
      这是我的第一篇测试文章？
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/12/12/hello-world/"/>
    <id>http://yoursite.com/2018/12/12/hello-world/</id>
    <published>2018-12-11T16:00:00.000Z</published>
    <updated>2018-12-14T01:37:53.128Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      hexo生成的官方文档
    
    </summary>
    
    
      <category term="Hello World" scheme="http://yoursite.com/tags/Hello-World/"/>
    
  </entry>
  
</feed>
